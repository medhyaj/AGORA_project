Project Plan Report 
Submitted By:  Group-6- Abhishek Manyam, Anushka Jain, Rishitha Pokalkar 

 

What problem(s) are we solving? This also includes motivation for why this question is worth answering. 

Research Question 1: To what extent does modifying API specifications, including variable types and paths, impact AGORA's ability to generate accurate and relevant test oracles for REST APIs? 

Motivation â€“ letting the developers know if changes in the structure of the Api can affect the generation of test oracles and if they need to stick to a particular pattern for better test oracles. 
This research is driven by the need to understand the resilience of automated testing tools, specifically AGORA, against the dynamic nature of REST API development. As APIs evolve, developers frequently adjust structures, including paths and data types, to meet new business requirements or enhance functionality. This study aims to illuminate whether such changes compromise the integrity and applicability of generated test oracles. Identifying whether adherence to specific structural patterns enhances the generation of test oracles will equip developers with insights to balance between API evolution and the maintenance of high-quality, reliable automated testing processes.  


Research Question 2: How do changes in black-box test case generators, specifically transitioning from RESTest to alternative tools such as RESTler and RESTTestGen affect the patterns and quality of invariants detected in REST API testing? 

Motivation - This research is motivated by the need to critically evaluate how the choice of a test case generator influences the detection of invariants, which are key to identifying consistent behaviors and potential anomalies in REST APIs. By examining the impact of transitioning between tools like RESTest, RESTler and RESTTestGen. This study aims to provide developers and testers with valuable insights into selecting the most appropriate tool for their testing needs, ultimately leading to the development of more reliable and high-quality APIs. 


How will the solution solve the problem? 

For research question 1 
Step 1: We will use the same Rest APIs from the OAS specification 
Step 2: Record the requests and responses from Restest  
Step 3: Change or mutate OAS specification (based on path or variables) 
Step 4: Run the Restest on the mutated OAS specification and record the requests and responses. 
Step 5: Run Beet on the testcases generated by both the stock and modified OAS. 
Step 6: Compare the invariants and analyze. 

For research question 2 
Step 1: Is to use the Rest Api's from the OAS specification to generate testcases from Restest 
Step 2: Next, we will tweak Restler-fuzzer to generate testcases which can be fed to the beet. 
Step 3: Then we will generate testcases from Restestgen 
Step 4: In the next step we will compare the invariants generated by all three backbox testers and analyze the result. 

How will you evaluate your solution? 


What are we trying to answer? 
Can we change the parameters, type etc. and get more invariants which are useful? 